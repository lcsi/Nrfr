name: Build Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Gradle 缓存
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # android.jar 缓存
      - name: Cache android.jar
        uses: actions/cache@v4
        with:
          path: ${{ env.ANDROID_HOME }}/platforms/android-34/android.jar
          key: android-jar-34

      # 获取版本号和提交信息
      - name: Get Version Info
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

          if git rev-list --tags --max-count=1 > /dev/null 2>&1; then
              LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || git rev-list --max-parents=0 HEAD)
              ALL_COMMITS=$(git log --pretty=format:"%h %s (%an)" $LAST_TAG..HEAD | grep -v -E "ci:|docs:" || true)
              FEAT_COMMITS=$(echo "$ALL_COMMITS" | grep "^[a-f0-9]\+ feat:" || true)
              FIX_COMMITS=$(echo "$ALL_COMMITS" | grep "^[a-f0-9]\+ fix:" || true)
              OTHER_COMMITS=$(echo "$ALL_COMMITS" | grep -v "^[a-f0-9]\+ \(feat:\|fix:\)" || true)
              CHANGELOG=""
              if [ ! -z "$FEAT_COMMITS" ]; then
                  CHANGELOG+="### 功能改进\n$FEAT_COMMITS\n"
              fi
              if [ ! -z "$FIX_COMMITS" ]; then
                  CHANGELOG+="### 问题修复\n$FIX_COMMITS\n"
              fi
              if [ ! -z "$OTHER_COMMITS" ]; then
                  CHANGELOG+="### 其他更新\n$OTHER_COMMITS"
              fi
          else
              CHANGELOG="### 首次发布\n$(git log --pretty=format:"- %h %s (%an)" | grep -v "ci:" || true)"
          fi
          if [ -z "$CHANGELOG" ]; then
              CHANGELOG="### 无更新内容"
          fi
          echo -e "$CHANGELOG"
          echo -e "$CHANGELOG" > CHANGELOG.md
        shell: bash

      # 设置 Java 环境
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      # 设置 Android SDK
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # 下载替换 android.jar（已缓存）
      - name: Download android.jar
        run: |
          if [ ! -f "$ANDROID_HOME/platforms/android-34/android.jar" ]; then
            mkdir -p $ANDROID_HOME/platforms/android-34
            curl -L https://raw.githubusercontent.com/Reginer/aosp-android-jar/refs/heads/main/android-34/android.jar -o $ANDROID_HOME/platforms/android-34/android.jar
          fi
        shell: bash

      # 构建 Android APK
      - name: Build Android APK
        run: |
          gradle wrapper
          chmod +x ./gradlew
          ./gradlew assembleDebug
        shell: bash

      # 复制 Android APK
      - name: Copy Android APK
        run: |
          mkdir -p nrfr-client/build/bin/resources
          cp app/build/outputs/apk/debug/app-debug.apk nrfr-client/build/bin/resources/nrfr.apk
        shell: bash

      # 打包发布文件
      - name: Create Release Archive
        run: |
          cd nrfr-client/build/bin
          7z a "../../nrfr-${{ steps.version.outputs.version }}-release.zip" ./*
        shell: bash

      # # 创建 Release
      # - name: Create Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       nrfr-client/nrfr-${{ steps.version.outputs.version }}-release.zip
      #       nrfr-${{ steps.version.outputs.version }}.apk
      #     body_path: CHANGELOG.md
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}